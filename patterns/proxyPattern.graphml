<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key attr.name="data" attr.type="string" for="edge" id="d1"/>
<key attr.name="data" attr.type="string" for="node" id="d0"/>
<graph edgedefault="directed"><node id="ROOT:Composite">
  <data key="d0">ROOT</data>
</node>
<node id="Package:Default">
  <data key="d0">Package</data>
</node>
<node id="Class:Component">
  <data key="d0">Class</data>
</node>
<node id="Property:itsComposite">
  <data key="d0">Property</data>
</node>
<node id="Operation:FunctionA">
  <data key="d0">Operation</data>
</node>
<node id="Parameter:FunctionA(Result)">
  <data key="d0">Parameter</data>
</node>
<node id="Class:Leaf">
  <data key="d0">Class</data>
</node>
<node id="Class:Composite">
  <data key="d0">Class</data>
</node>
<node id="Property:itsComponent">
  <data key="d0">Property</data>
</node>
<node id="Operation:Remove">
  <data key="d0">Operation</data>
</node>
<node id="Parameter:Remove(child)">
  <data key="d0">Parameter</data>
</node>
<node id="Parameter:Remove(Result)">
  <data key="d0">Parameter</data>
</node>
<node id="Operation:Add">
  <data key="d0">Operation</data>
</node>
<node id="Parameter:Add(child)">
  <data key="d0">Parameter</data>
</node>
<node id="Parameter:Add(Result)">
  <data key="d0">Parameter</data>
</node>
<node id="Operation:Get">
  <data key="d0">Operation</data>
</node>
<node id="Parameter:Get(child)">
  <data key="d0">Parameter</data>
</node>
<node id="Parameter:Get(Result)">
  <data key="d0">Parameter</data>
</node>
<node id="STD_TYPE"/>
<edge source="ROOT:Composite" target="Package:Default">
  <data key="d1">part-of</data>
</edge>
<edge source="Package:Default" target="Class:Component">
  <data key="d1">part-of</data>
</edge>
<edge source="Package:Default" target="Class:Leaf">
  <data key="d1">part-of</data>
</edge>
<edge source="Package:Default" target="Class:Composite">
  <data key="d1">part-of</data>
</edge>
<edge source="Class:Component" target="Property:itsComposite">
  <data key="d1">prop</data>
</edge>
<edge source="Class:Component" target="Operation:FunctionA">
  <data key="d1">prop</data>
</edge>
<edge source="Property:itsComposite" target="Class:Composite">
  <data key="d1">is-type</data>
</edge>
<edge source="Operation:FunctionA" target="Parameter:FunctionA(Result)">
  <data key="d1">prop</data>
</edge>
<edge source="Parameter:FunctionA(Result)" target="STD_TYPE">
  <data key="d1">is-type</data>
</edge>
<edge source="Class:Leaf" target="Class:Component">
  <data key="d1">generalization</data>
</edge>
<edge source="Class:Composite" target="Property:itsComponent">
  <data key="d1">prop</data>
</edge>
<edge source="Class:Composite" target="Operation:Remove">
  <data key="d1">prop</data>
</edge>
<edge source="Class:Composite" target="Operation:Add">
  <data key="d1">prop</data>
</edge>
<edge source="Class:Composite" target="Operation:Get">
  <data key="d1">prop</data>
</edge>
<edge source="Class:Composite" target="Class:Component">
  <data key="d1">generalization</data>
</edge>
<edge source="Property:itsComponent" target="Class:Component">
  <data key="d1">is-type</data>
</edge>
<edge source="Property:itsComponent" target="Property:itsComposite">
  <data key="d1">association</data>
</edge>
<edge source="Operation:Remove" target="Parameter:Remove(child)">
  <data key="d1">prop</data>
</edge>
<edge source="Operation:Remove" target="Parameter:Remove(Result)">
  <data key="d1">prop</data>
</edge>
<edge source="Parameter:Remove(child)" target="Class:Component">
  <data key="d1">is-type</data>
</edge>
<edge source="Parameter:Remove(Result)" target="STD_TYPE">
  <data key="d1">is-type</data>
</edge>
<edge source="Operation:Add" target="Parameter:Add(child)">
  <data key="d1">prop</data>
</edge>
<edge source="Operation:Add" target="Parameter:Add(Result)">
  <data key="d1">prop</data>
</edge>
<edge source="Parameter:Add(child)" target="Class:Component">
  <data key="d1">is-type</data>
</edge>
<edge source="Parameter:Add(Result)" target="STD_TYPE">
  <data key="d1">is-type</data>
</edge>
<edge source="Operation:Get" target="Parameter:Get(child)">
  <data key="d1">prop</data>
</edge>
<edge source="Operation:Get" target="Parameter:Get(Result)">
  <data key="d1">prop</data>
</edge>
<edge source="Parameter:Get(child)" target="Class:Component">
  <data key="d1">is-type</data>
</edge>
<edge source="Parameter:Get(Result)" target="STD_TYPE">
  <data key="d1">is-type</data>
</edge>
</graph></graphml>